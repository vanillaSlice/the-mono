name: URL Shortener
on:
  pull_request:
    branches: main
    paths:
      - .github/workflows/url-shortener.yml
      - projects/urlshortener/**
  push:
    branches: main
    paths:
      - .github/workflows/url-shortener.yml
      - projects/urlshortener/**
jobs:
  Build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: projects/urlshortener
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.x
      - run: |
          docker build --target test -t test .
          docker run test
          docker cp $(docker ps -l -q):/opt/app/.coverage .coverage.tmp
          pip install coverage
          coverage combine
          coverage xml
      - uses: codecov/codecov-action@v2
        with:
          flags: URLShortener
          fail_ci_if_error: true
      - run: |
          docker-compose up -d
      - uses: cypress-io/github-action@v4
        with:
          project: ./integration_tests
          record: true
          tag: URLShortener-Integration
          working-directory: projects/urlshortener
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  Deploy:
    if: ${{ github.event_name == 'push' }}
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          appdir: projects/urlshortener
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: sliceurl
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true
      - uses: juliangruber/sleep-action@v1
        with:
          time: 60s
      - uses: cypress-io/github-action@v2
        with:
          project: ./e2e_tests
          record: true
          tag: URLShortener-E2E
          working-directory: projects/urlshortener
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Rollback
      #   if: failure()
      #   run: |
      #     RELEASES=$(curl -n -s https://api.heroku.com/apps/${{ secrets.HEROKU_APP_NAME }}/releases \
      #       -H "Accept: application/vnd.heroku+json; version=3" \
      #       -H "Authorization: Bearer ${{ secrets.HEROKU_API_KEY }}")
      #     LAST_VERSION=$(echo "${RELEASES}" | jq -r .[-2].id)
      #     PAYLOAD='{"release": "'"${LAST_VERSION}"'"}'
      #     curl -n -X POST https://api.heroku.com/apps/${{ secrets.HEROKU_APP_NAME }}/releases \
      #       -H "Accept: application/vnd.heroku+json; version=3" \
      #       -H "Authorization: Bearer ${{ secrets.HEROKU_API_KEY }}" \
      #       -H "Content-Type: application/json" \
      #       -d "${PAYLOAD}"
