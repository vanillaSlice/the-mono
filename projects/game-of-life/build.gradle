plugins {
    id 'java'
    id 'idea'
    id 'org.unbroken-dome.test-sets' version '2.0.3'
    id 'checkstyle'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

version = '1.1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.2'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.23.4'
    testCompile group: 'org.testfx', name: 'testfx-core', version: '4.0.15-alpha'
    testCompile group: 'org.testfx', name: 'testfx-junit5', version: '4.0.15-alpha'
    testCompile group: 'org.testfx', name: 'openjfx-monocle', version: '8u76-b04'
}

testSets {
    e2eTest
}

tasks.withType(Test) {
    useJUnitPlatform()
}

check.dependsOn e2eTest
e2eTest.mustRunAfter test

checkstyle {
    toolVersion = '8.16'
    maxWarnings = 0
}

jacoco {
    toolVersion = '0.8.2'
}

jacocoTestReport {
    executionData fileTree(project.rootDir.absolutePath).include('**/build/jacoco/*.exec')
    reports {
        xml.enabled = true
    }
}

jacocoTestCoverageVerification {
    executionData fileTree(project.rootDir.absolutePath).include('**/build/jacoco/*.exec')
    violationRules {
        rule {
            limit {
                minimum = 0.9
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

task buildFatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Game of Life',
                'Implementation-Version': version,
                'Main-Class': 'lowe.mike.gameoflife.GameOfLifeApplication'
    }
    baseName = 'GameOfLife-all'
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}

build.finalizedBy buildFatJar
